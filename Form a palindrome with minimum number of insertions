//Basically what logic we applied here is , number of deletions to make a string palindrome is equal to the number of insertions to make a string a palindrome.
int LongestRepeatingSubsequence(string str1){
		int a = str1.length();
		string str2 = str1;
		int dp[a+1][a+1];
		for(int i = 0;i<=a;i++){
		for(int j = 0;j<=a;j++){
		if(i == 0 || j == 0) dp[i][j] = 0;    
		}    
		}
		for(int i = 1;i<=a;i++){
		for(int j = 1;j<=a;j++){
		if(str1[i-1] == str2[j-1] && i!=j) dp[i][j] = 1+dp[i-1][j-1];
		else dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
		}    
		}
		return dp[a][a];
		}
