//Longest Palindromic Sequence
int check(string str1){
    int a = str1.length();
    string str2;
    for(int i = str1.length()-1;i>=0;i--) str2 = str2+str1[i];
    int dp[a+1][a+1];
    for(int i = 0;i<=a;i++) dp[i][0] = 0;
    for(int i = 0;i<=a;i++) dp[0][i] = 0;
    for(int i = 1;i<=a;i++){
    for(int j = 1;j<=a;j++){
    if(str1[i-1] == str2[j-1]) dp[i][j] = 1+dp[i-1][j-1];
    else dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
    }
    }
    return dp[a][a];
    }
int main(){
    int t;
    cin>>t;
    while(t--){
    string str1;
    cin>>str1;
    int result = check(str1);
    cout<<result<<endl;
    }
    return 0;
    }
